LOCAL STORAGE, SESSIONSTORAGE, COOKIES
=======================================
   - localStorage, sessionStorage and cookies are all client storage solutions. Session data is held on the server
     where it remains under your direct control.

   - localStorage and sessionStorage are both so-called WebStorages.

	* localStorage: stores data with no expiration date, and gets cleared only through javaScript or clearing thw browser cache.
	* sessionStorage: similar to localStorage but expires when the browser closed (not the tab).
	* cookie: stores data that has to be sent back to the server with subsequent requests.

LOCALSTORAGE AND SESSIONSTORAGE
================================
   - localStorage and sessionStorage are relatively new APIs (meaning not all legacy browsers will support them) and are near
     identical (both in APIs and capabilities) with the sole exception of persistence. sessionStorage is only available for the
     duration of the browser session, so the session is deleted when the window (or tab) is closed. It does however survive page reloads.

   - Clearly, if the data you are storing needs to be "available on an ongoing basis", then localStorage is preferable to sessionStorage, 
     although you should note both can be cleared used by the user so you should not rely on the continuing existence of data in
     either case.

   - localStorage and sessionStorage are perfect for persisting non-sensitive data needed, whitin client scripts between pages 
     (example: preference, scores in games). The data stored in localStorage and sessionStorage can easily be read or changed within 
     the client/browser so should not be relied upon for storage of sensitive data.

COOKIES
========
   - cookies can also be trivially tampered with by the user, anddata can also be read from them in plain text - so if you want to store
     sensitive data then session si really your only option. if you are not using SSL, cookie information can also be intercepted in transit,
     especially on an open wifi.

   - on the positive side cookies can have a degree of protection applied from security risks like Cross-Site Scriptiong (XSS) by setting
     an HTTP only flag which means modern browsers will prevent access to the cookies and values from JavaScript. This is especially importan
     with authentication cookies, which are used to store a token containing details of the user who is logged on.

   - As cookies are used for authentication purposes and persistence of user data, all cookies valid for a page are sent from the browser
     to the server for every request to the same domain - this includes the original page request, any subsequenta Ajax request, all images,
     stylesheets, scripts and fonts. For this reason cookies should not be used to store large amounts of information. Browser may also impose
     limits on the size of information that can be stored in cookies. Typically cookies are used to store identifying tokens for authentication,
     session and advertising tracks. The tokens are typically encrypted.

CLIENT SIDE VS SERVER SIDE
===========================
http://stackoverflow.com/questions/19867599/what-is-the-difference-between-localstorage-sessionstorage-session-and-cookies