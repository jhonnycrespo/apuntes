app.get(name)
Return the value of name app setting, where "name" is one of strings in the app.settings table.

ejm: 
	- app.set('title', 'My Site');
	- app.get('title'); => My Site

* process.env
	- An object containing the user environment

   ejm: process.env.foo = 'bar'


In many environments (e.g. Heroku), and as a convention, you can set the environment variable "PORT"
to tell your web server what port to listen on.

So process.env.port || 3000 means: whatever is in the environment variable PORT, or 3000 if there's nothig there.

- If you pass 3000 hard-coded to app.listen(), you're always listening on port 3000, which might be just for you, or not, 
depending on your requirements and the requirements of the environment in which you're running your server.

NODE_ENV
=========
   - NODE_ENV is an "environment variable". When a node application is run, it can check the value of the environment
     variable and do different things based on the value. NODE_ENV specifically is used (by convention ) to state whether 
     a particular environment is a "production" or a "development" environment. A common use-case is running additional  
     debugging or logging code if running in a development environment. 

ACCESSING NODE_ENV
===================
   - var environment = process.env.NODE_ENV or app.get('env') (note: this defaults to "development").

SETTING NODE_ENV
=================

   - NODE_ENV works like any other environment variable (e.g. PATH).
   - How to actually set the environment variable varies from operating system to operating system, and also depend on your user setup.
   
   * If you want to set the environment variable as a one-off, you can do so from the command line:

	- linux & mac: export NODE_ENV=production
	- windows: set NODE_ENV=production


   - Convention has dictacted that there are only two values you should use for NODE_ENV, either production or development, all lowercase.

   - Note that it's a really bad idea to try to set NODE_ENV from within a node application itself - if you do it will only apply to the process 
     from which it was set, so things probably won't work like you expect them to. Don't do it - you'll regret it. 

