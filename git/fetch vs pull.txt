What's the difference between git fetch and git pull?
=====================================================

both are used to download new data from a remote repository.

git fetch really only downloads new data from a remote repository - but
it doesn't integrate any of this new data into your working files. Fetch is great
for getting a fresh view on all the things that happened in a remote repository.
Due to it's "harmless" nature, you can rest assured: fetch will never manipulate,
destroy, or screw up anything.

You might wonder where the changes are stored since they are not merged. The answer
is that they are stored in your local repository in what are called remote tracking branches.
A remote tracking branch is a local copy (or mirror) of a remote branch. For example, when you
run git branch -a you might notice origin/master in the output which is the remote tracking
branch for master.


git pull, in contrast, is used with a different goal in mind: to update your current
HEAD branch with the latest changes from the remote server. This means that pull not
only downloads new data; it also directly integrates it into your current working copy
files. This has a couple of consequences:

    * Since "git pull" tries to merge remote changes with your local ones,
    a so-called "merge conflict" can occur. 

    * Like for many other actions, it's highly recommended to start a "git pull"
    only with a clean working copy. This means that you should not have any
    uncommitted local changes before you pull. Use Git's Stash feature to save
    your local changes temporarily.