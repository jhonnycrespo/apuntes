Commit
=======

Seven Rules
============

    1. Separate subject from body with a blank line
    2. Limit the subject line to 50 characters
    3. Capitalize the subject line
    4. Do not end the subject line with a period
    5. Use the imperative mood in the subject line
	- Imperative mood just means "spoken or written as if giving a command or instruction". A few examples:
	  ejm:
		- Clean your room
		- Close the door
		- Take out the trash 
    6. Wrap the body at 72 characters
    7. Use the body to explain "what and why" vs. "how"


	- Though not required, it's a good idea to begin the commit message with a single short (less than 50 character) 
	  line summarizing the change, followed by a blank line and then a more thorough description. The text up to the 
	  first blank line in a commit message is treated as the commit title, and that title is used throughout Git. 
	  For example, git-format-patch(1) turns a commit into email, and it uses the title on the Subject line and the rest 
	  of the commit in the body.


	- Firstly, not every commit requires both a subject and a body. Sometimes a single line is fine, especially when the change 
	  is so simple that no further context is necessary. For example:

		  "Fix typo in introduction to user guide"

	- Nothing more need be said; if the reader wonders what the typo was, she can simply take a look at the change 
	  itself, i.e. use git show or git diff or git log -p.


5. Use the imperative mood in the subject line
=================================================

  - Imperative mood just means "spoken or written as if giving a command or instruction".

	- To remove any confusion, here's a simple rule to get it right every time.
	  A properly formed git commit subject line should always be able to complete the following sentence:
		* If applied, this commit will <your subject line here>

	ejm:
      - If applied, this commit will "refactor subsystem X for readability"
      - If applied, this commit will "update getting started documentation"
      - If applied, this commit will "remove deprecated methods"
      - If applied, this commit will "release version 1.0.0"
      - If applied, this commit will "merge pull request #123 from user/branch"

  Notice how this doesn't work for the other non-imperative forms:

      - If applied, this commit will fixed bug with Y
      - If applied, this commit will changing behavior of X


      * Remember: Use of the imperative is important only in the subject line. You can relax this restriction when you're writing the body.

7. Use the body to explain what and why vs how
===============================================

